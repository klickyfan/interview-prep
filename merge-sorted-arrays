using System.IO;
using System;
using System.Linq;

/*
You are given two sorted arrays, A and B, where A has a large enough buffer at 
the end to hold B.Write a method to merge B into A in sorted order.

Assume no duplicates.

Source: Cracking the Coding Interview 5th Edition p. 121
*/

class Program
{
    static void Main()
    {
        /*
        x array is assumed to have length of x + y, and lastX is the position of the 
        last stored element in x array
        */
		    int[] x = new int[15] {  2, 3, 7, 9, 10, 12, 24, 25, 26, 29, 0, 0, 0, 0, 0 };
		    int[] y = new int[5] { 1, 8, 11, 18, 30 };
		    MergeArraysAsProblemDictates(x, y, 9);
		
		    /* bonus */
		    int[] sortedArray0 = new int[] { 2, 3, 7, 9, 10, 12, 24, 25 };
		    int[] sortedArray1 = new int[] { 1, 3, 4, 9, 8, 26, 30 };
		    MergeArraysUsingLinq(sortedArray0, sortedArray1);
    }
	  
    public static void MergeArraysAsProblemDictates(int[] x, int[] y, int lastX)
    {
		    int yIndex = y.Length - 1;
		    int xIndex = lastX;
		    int fillIndex = x.Length -1;
		    Console.WriteLine("x: {0}", string.Join(", ", x));
		    Console.WriteLine("y: {0}", string.Join(", ", y));
		
		    while (yIndex >= 0)
		    {
			      Console.WriteLine(string.Join(", ", x));
			      Console.WriteLine("xIndex: {0}, yIndex: {1}, fillIndex: {2}", xIndex, yIndex, fillIndex);
            
			      if (xIndex >= 0 && yIndex < 0)
			      {
				        x[fillIndex] = x[xIndex];
				        xIndex--;
			      } 
			      else if (yIndex >= 0 && xIndex<0)
			      {
				        x[fillIndex] = y[yIndex];
				        yIndex--;
			      }
			      else if (x[xIndex] > y[yIndex])
			      {
				        x[fillIndex] = x[xIndex];
				        xIndex--;					
			      } 
			      else if (y[yIndex] > x[xIndex])
			      {
				        x[fillIndex] = y[yIndex];
				        yIndex--;
			      } 
			
			      fillIndex--;
		    }
		
		    Console.WriteLine("x: {0}", string.Join(", ", x));
    }
	
    static void MergeArraysUsingLinq(int[] array0, int[] array1)
	  {
		    int[] mergedArrays = array0.Union(array1).OrderBy(c => c).ToArray();
		    Console.WriteLine("merged arrays: {0}", string.Join(", ", mergedArrays));
	  }
}
